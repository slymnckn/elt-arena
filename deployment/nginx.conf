    # ELT Arena Nginx Configuration
    # /etc/nginx/sites-available/elt-arena

    server {
        listen 80;
        server_name eltarena.com www.eltarena.com;

        # HTTP'den HTTPS'e yönlendir
        return 301 https://$server_name$request_uri;
    }

    server {
        listen 443 ssl http2;
        server_name eltarena.com www.eltarena.com;

        # SSL Configuration (Let's Encrypt ile güncellenecek)
        ssl_certificate /etc/letsencrypt/live/eltarena.com/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/eltarena.com/privkey.pem;
        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_ciphers ECDHE-RSA-AES256-GCM-SHA512:DHE-RSA-AES256-GCM-SHA512:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-SHA384;
        ssl_prefer_server_ciphers off;

        # Security headers
        add_header X-Frame-Options "SAMEORIGIN" always;
        add_header X-XSS-Protection "1; mode=block" always;
        add_header X-Content-Type-Options "nosniff" always;
        add_header Referrer-Policy "no-referrer-when-downgrade" always;
        add_header Content-Security-Policy "default-src 'self' http: https: data: blob: 'unsafe-inline'" always;
        add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;

        # Gzip compression
        gzip on;
        gzip_vary on;
        gzip_min_length 1024;
        gzip_proxied expired no-cache no-store private auth;
        gzip_types text/plain text/css text/xml text/javascript application/x-javascript application/xml+rss;

        # Client max body size (file uploads için)
        client_max_body_size 50M;

        # Upload files - serve directly from filesystem (standalone build)
        location /uploads/ {
            alias /home/elt-arena/.next/standalone/public/uploads/;
            expires 1y;
            add_header Cache-Control "public, immutable";
            access_log off;
            
            # CORS headers for cross-origin requests
            add_header Access-Control-Allow-Origin "*";
            add_header Access-Control-Allow-Methods "GET, OPTIONS";
        }

        # Static files cache
        location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|webp|woff|woff2|ttf|eot)$ {
            expires 1y;
            add_header Cache-Control "public, immutable";
            access_log off;
        }

        # Main application
        location / {
            proxy_pass http://localhost:3000;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_cache_bypass $http_upgrade;
            
            # Timeout settings
            proxy_connect_timeout       300;
            proxy_send_timeout          300;
            proxy_read_timeout          300;
            send_timeout                300;
        }

        # Health check endpoint
        location /health {
            access_log off;
            return 200 "healthy\n";
            add_header Content-Type text/plain;
        }
    }
